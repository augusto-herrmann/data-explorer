{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","utils/index.js","reducers/rootReducer.js","reducers/dataViewBuilderReducer.js","reducers/filterUIReducer.js","reducers/sharedStateReducer.js","store.js","components/DataView/index.js","utils/loadDataset.js","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","getDataViewBuilderView","datapackage","views","length","resources","schema","getEmptyView","deepClone","obj","JSON","parse","stringify","combineReducers","dataViewBuilder","state","arguments","undefined","type","filterUI","sharedState","action","unshift","payload","assign","filteredDatapackage","loading","error","errorBody","initialState","loadedData","DataView","props","react_default","a","createElement","react_loader_default","loaded","view","dist_App_default","key","Math","random","toArray","require","parseDatapackageIdentifier","stringOrJSON","compile","descriptor","dpRender","loadDataset","_ref","asyncToGenerator","regenerator_default","mark","_callee2","dpID","DP_ID","tabularFormats","dataset","wrap","_context2","prev","next","Dataset","load","sent","Promise","all","_ref2","_callee","file","response","result","rowStream","data","_response","_result","_context","displayName","abrupt","path","includes","fetch","ok","unavailable","json","records","format","rows","size","keyed","addSchema","t0","console","warn","toLowerCase","stop","_x2","apply","this","_x","fetchDataBegin","fetchDataSuccess","res","_objectSpread","connect","App_objectSpread","dispatch","filterUIAction","getState","newDatapackage","datastore_active","fetchDataAction","_x3","dataViewBuilderAction","useEffect","className","dist","resource","filterBuilderAction","chart_builder_dist","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b98163fe.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 455,\n\t\"./table-schema.json\": 869,\n\t\"./topojson.json\": 456\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 868;","export const getEmptyView = datapackage => {\n  try {\n    return {resources: [{schema: datapackage.resources[0].schema}]}\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const getDataViewBuilderView = (datapackage) => {\n  if (!datapackage) return {}\n\n  const views = datapackage.views || []\n\n  switch (views.length) {\n    case 1:\n      return datapackage.views[0]\n    case 2:\n      return datapackage.views[1]\n    default:\n      return getEmptyView(datapackage)\n  }\n}\n\nexport const getResourceForFiltering = (datapackage) => {\n  if (!datapackage) return {}\n  return datapackage.resources[0]\n}\n\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj))\n}\n","import { combineReducers } from 'redux'\nimport { default as dataViewBuilder } from './dataViewBuilderReducer'\nimport { default as filterUI } from './filterUIReducer'\nimport { default as sharedState } from './sharedStateReducer'\n\nexport default combineReducers({\n dataViewBuilder, filterUI, sharedState\n})\n","export default (state = {}, action) => {\n switch (action.type) {\n  case 'DATA_VIEW_BUILDER_ACTION':\n    return state\n  default:\n    return state\n }\n}\n","export default (state = {}, action) => {\n switch (action.type) {\n  case 'FILTER_UI_ACTION':\n   return state \n  default:\n   return state\n }\n}\n","import { deepClone } from '../utils'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case 'DATA_VIEW_BUILDER_ACTION':\n      const datapackage = deepClone(state.datapackage)\n\n      if (datapackage.views.length === 1) {\n        datapackage.views.unshift(action.payload)\n      }\n\n      if (datapackage.views.length > 1) {\n        datapackage.views[0] = action.payload\n      }\n\n      const newState = Object.assign(deepClone(state), {datapackage})\n      return newState\n    case 'FILTER_UI_ACTION':\n      const filteredDatapackage = deepClone(state.datapackage)\n      filteredDatapackage.resources[0] = action.payload\n      const filteredState = Object.assign(deepClone(state), {datapackage: filteredDatapackage})\n      return filteredState\n    case 'FETCH_DATA_BEGIN':\n      return Object.assign({}, state, {loading: true})\n    case 'FETCH_DATA_SUCCESS':\n      return Object.assign({}, state, {loading: false, error: false, datapackage: action.payload.datapackage})\n    case 'FETCH_DATA_FAILURE':\n      return Object.assign({}, state, {loading: false, error: true, errorBody: action.payload})\n    default:\n     return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nconst initialState = {\n  dataViewBuilder: {\n    // chartBuilder state\n  },\n  filterUI: {\n    // UIState\n  },\n  sharedState: {\n    loading: false,\n    datapackage: {},\n    loadedData: {} // not implemented\n  }\n}\n\nexport default function configureStore(props) {\n \n return createStore(\n   rootReducer,\n   Object.assign({}, initialState, props),\n   composeWithDevTools(applyMiddleware(thunk))\n )\n}\n","import React from 'react'\nimport Loader from 'react-loader'\nimport DataView from 'datapackage-views-js'\n\nexport default props => {\n  const views = props.datapackage.views\n\n  return (\n  <Loader loaded={!props.loading}>\n    <div>\n     {\n        views.map(view => <DataView key={Math.random()} datapackage={{views: [view]}} />)\n     }\n    </div>\n  </Loader>\n  )\n}\n","import * as dpRender from 'datapackage-render'\nimport { Dataset } from 'data.js'\n\nvar toArray = require('stream-to-array')\n\nfunction parseDatapackageIdentifier(stringOrJSON) {\n  try {\n    return JSON.parse(stringOrJSON)\n  } catch (e) {\n    return stringOrJSON\n  }\n}\n\nfunction compile(descriptor) {\n  return descriptor.views.map(view => {\n    return dpRender.compileView(view, descriptor)\n  })\n}\n\n// needs to be encapsulated\n// should be library code\nexport default async dpID => {\n  const DP_ID = parseDatapackageIdentifier(dpID)\n  const tabularFormats = ['csv', 'tsv', 'dsv', 'xls', 'xlsx']\n\n  try {\n    const dataset = await Dataset.load(DP_ID)\n\n    // TODO why is this happening here? This looks like library code\n    // TODO clean up! this shouldn't handle mutation of descriptor along\n    //      side of fetching resources etc... a mess\n    await Promise.all(dataset.resources.map(async (file) => {\n      if (file.displayName === 'FileInline') {\n        return\n      } else if (file.descriptor.path && file.descriptor.path.includes('datastore_search')) {\n        // Datastore, e.g., when a path is a 'datastore_search' API\n        const response = await fetch(file.descriptor.path)\n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        file.descriptor.data = result.result.records\n      } else if (file.displayName === \"FileRemote\" && tabularFormats.includes(file.descriptor.format)) {\n        // Tabular data\n        try {\n          const rowStream = await file.rows({size: 100, keyed: true})\n          const data = await toArray(rowStream)\n          if (data.length > 0) {\n            file.descriptor.data = data // This makes it FileInline\n          } else {\n            file.descriptor.unavailable = true\n          }\n          await file.addSchema()\n        } catch (e) {\n          console.warn(e)\n          file.descriptor.unavailable = true\n        }\n      } else if (file.descriptor.format.toLowerCase().includes('json')) {\n        // Geographical data\n        const response = await fetch(file.descriptor.path)\n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        // The '.json' files can contain geo data - check by its 'type' property\n        const geoJsonTypes = [\n          'Feature', 'FeatureCollection', 'Point', 'MultiPoint', 'LineString',\n          'MultiLineString', 'Polygon', 'MultiPolygon', 'GeometryCollection'\n        ]\n        if (geoJsonTypes.includes(result.type)) {\n          file.descriptor.data = result\n        } else {\n          // It isn't a valid GeoJSON\n          file.descriptor.unavailable = true\n          return\n        }\n      } else if (file.descriptor.format.toLowerCase() === 'pdf') {\n        return\n      } else {\n        // We can't load any other data types for now.\n        file.descriptor.unavailable = true\n      }\n    }))\n\n    return compile(dataset.descriptor)\n  } catch (e) {\n    console.warn('Failed to load a Dataset from provided datapackage id\\n' + e)\n    return DP_ID\n  }\n}\n","import loadDataset from '../utils/loadDataset'\n\nexport const filterUIAction = (payload) => async (dispatch, getState) => {\n dispatch({\n  type: 'FILTER_UI_ACTION',\n  payload\n })\n const datapackage = getState().sharedState.datapackage\n // For datastore resources, we need to remove loaded `data` attribute to\n // trigger re-fetch of a resource. This is required since we initially fetch\n // only subset of data from datastore, eg, first 100 rows. When user applies\n // filters, we need to hit datastore api and update the data.\n if (datapackage.resources[0].datastore_active) {\n   delete datapackage.resources[0].data\n }\n dispatch(fetchDataBegin())\n const views = await loadDataset(datapackage)\n const newDatapackage = JSON.parse(JSON.stringify(datapackage))\n newDatapackage.views = views\n dispatch(fetchDataSuccess({datapackage: newDatapackage}))\n}\n\nexport const dataViewBuilderAction = (payload) => dispatch => {\n dispatch({\n  type: 'DATA_VIEW_BUILDER_ACTION',\n  payload\n })\n}\n\nexport const fetchDataAction = payload => async dispatch => {\n  dispatch(fetchDataBegin())\n  const views = await loadDataset(payload.datapackage)\n  const newDatapackage = JSON.parse(JSON.stringify(payload.datapackage))\n  newDatapackage.views = views\n  dispatch(fetchDataSuccess({datapackage: newDatapackage}))\n}\n\nconst fetchDataBegin = () => ({\n  type: 'FETCH_DATA_BEGIN'\n})\n\nconst fetchDataSuccess = res => ({\n  type: 'FETCH_DATA_SUCCESS',\n  payload: { ...res }\n})\n\nconst fetchDataFailure = err => ({\n  type: 'FETCH_DATA_FAILURE',\n  payload: { err }\n})\n","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { QueryBuilder } from 'datastore-query-builder';\nimport DataView from './components/DataView'\nimport { ChartBuilder } from 'chart-builder'\nimport { filterUIAction, fetchDataAction, dataViewBuilderAction } from './actions/'\nimport { getDataViewBuilderView, getResourceForFiltering } from './utils'\n\nexport const App = props => {\n  useEffect(() => {\n    const payload = {\n      datapackage: props.sharedState.datapackage\n    }\n    props.fetchDataAction(payload)\n  }, [])\n\n  return (\n    <div className=\"text-center ml-6\">\n      <header>\n        <div className=\"container\">\n          <h1 className=\"text-3xl\">Data Explorer</h1>\n        </div>\n      </header>\n      <div className=\"container py-4\">\n        <div className=\"\">\n          <QueryBuilder resource={getResourceForFiltering(props.sharedState.datapackage)} filterBuilderAction={props.filterUIAction} />\n        </div>\n      </div>\n      <div className=\"container flex py-6\">\n        <div className=\"w-3/4 p-4 mr-4 overflow-x-auto border-r-2\">\n          <DataView {...props.sharedState} />\n        </div>\n        <div className=\"w-1/4 p-4 mr-4\">\n          <ChartBuilder view={getDataViewBuilderView(props.sharedState.datapackage)} dataViewBuilderAction={props.dataViewBuilderAction} />\n        </div>\n      </div>\n     </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n filterUIAction: (payload) => dispatch(filterUIAction(payload)),\n fetchDataAction: payload => dispatch(fetchDataAction(payload)),\n dataViewBuilderAction: payload => dispatch(dataViewBuilderAction(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport './App.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nfunction parseDatapackageIdentifier(stringOrJSON) {\n  try {\n    return JSON.parse(stringOrJSON)\n  } catch (e) {\n    console.error(e)\n    return stringOrJSON\n  }\n}\nconst datapackage = window.DP_ID\n\n\nReactDOM.render(\n <Provider store={configureStore({sharedState: {datapackage}})}>\n  <App />\n </Provider>,\n document.getElementById('data-explorer')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}